[Initial]
Message=Installiere Latitude 3510 Einstellungen...
DefStringList $Result$
DefVar $ExitCode$
DefVar $Hostname$
DefVar $InventoryNumber$
DefVar $NewUefiAuth$
DefVar $PropertyPlaceholder$
DefVar $UefiAuth$
DefVar $UefiLidSwitch$
DefVar $UefiNewPassword$
DefVar $UefiOldPassword$
DefVar $UefiPathSecurity$
DefVar $UefiPowerOnOpen$
DefVar $UefiWol$


[Actions]
ShowBitmap "%ScriptPath%\logo.png" "MDG Latitude 3510 BIOS-Settings"
Sub_GetProperties
Files_Copy
Sub_GetVars
DosInAnIcon_Setup /Sysnative
Sub_HandleFirstExitCode
Files_Cleanup
Sub_HandleExitCode

[Sub_GetProperties]
Set $PropertyPlaceholder$ = GetProductProperty("propplaceholder", "")
SetConfidential $UefiOldPassword$ = GetProductProperty("oldpw", "")
SetConfidential $UefiNewPassword$ = GetProductProperty("newpw", "")
Set $UefiLidSwitch$ = GetProductProperty("lidswitch", "")
Set $UefiPowerOnOpen$ = GetProductProperty("poweronopen", "")
Set $UefiPathSecurity$ = GetProductProperty("uefipathsecurity", "")
Set $UefiWol$ = GetProductProperty("wol", "")

if ($PropertyPlaceholder$ = "")
  LogError "No property placeholder defined"
  IsFatalError
endif

if ($UefiOldPassword$ = "")
  Set $UefiAuth$ = ""
else
  SetConfidential $UefiAuth$ = "--ValSetupPwd="+'"'+$UefiOldPassword$+'"'
endif

[Sub_GetVars]
Set $Result$ = GetReturnListFromSection("opsiservicecall_GetPcname")
Set $Hostname$ = TakeString("0", $Result$)
Set $Result$ = GetReturnListFromSection("opsiservicecall_GetInventoryNumber")
Set $InventoryNumber$ = TakeString("0", $Result$)

if ($PropertyPlaceholder$ = "")
  LogError "No property placeholder defined"
  IsFatalError
endif

if ($InventoryNumber$ = "")
  Set $InventoryNumber$ = $Hostname$
endif

comment "Hostname is: " + $Hostname$
comment "Inventory Number is: " + $InventoryNumber$

[DosInAnIcon_Setup]
"%opsiTmpDir%\%installingProdName%\data\cctk\X86_64\cctk.exe" --AdminSetupLockout=Enabled --LidSwitch="$UefiLidSwitch$" --PowerOnLidOpen="$UefiPowerOnOpen$" --UefiBootPathSecurity="$UefiPathSecurity$" --WakeOnLan="$UefiWol$" --PropOwnTag="$PropertyPlaceholder$-$Hostname$" --Asset="$InventoryNumber$" --SetupPwd="$UefiNewPassword$" $UefiAuth$

[Files_Copy]
copy -s "%ScriptPath%\data\*" "%opsiTmpDir%\%installingProdName%\data\"

[Files_Cleanup]
delete -sf "%opsiTmpDir%\%installingProdName%\"

[Sub_HandleFirstExitCode]
; check return code
Set $ExitCode$ = GetLastExitCode
; checking possible errors on first run
Switch $ExitCode$
  Case "0"
    comment "Looks good: setup program gives exitcode zero. Proceed."
  EndCase
  Case "106"
    ; 106: No password installed yet
    comment "Let's try again without --ValSetupPwd"
    Set $UefiAuth$ = ""
    DosInAnIcon_Setup /Sysnative
  EndCase
  Case "65"
    ; 65: No password provided but one is installed
    comment "Let's try new Passwort as --ValSetupPwd. Maybe it ran already?"
    SetConfidential $UefiAuth$ = "--ValSetupPwd="+'"'+$UefiNewPassword$+'"'
    DosInAnIcon_Setup /Sysnative
  EndCase
  Case "58"
    ; 58: Incorrect setup password provided
     comment "Let's try new Passwort as --ValSetupPwd. Maybe it ran already?"
     SetConfidential $UefiAuth$ = "--ValSetupPwd="+'"'+$UefiNewPassword$+'"'
     DosInAnIcon_Setup /Sysnative
  EndCase
  DefaultCase
     comment "We can't handle this Exitcode here: " + $exitcode$
  EndCase
EndSwitch

[Sub_HandleExitCode]
; check return code
Set $ExitCode$ = GetLastExitCode
comment "GetLastExitCode: " + $ExitCode$
if not($ExitCode$ = "0")
  LogError "Fatal: setup returned exit code " + $ExitCode$
  IsFatalError
endif

[opsiservicecall_GetPcname]
"method":"collect_wlan_mac_hostName"
"params":[]

[opsiservicecall_GetInventoryNumber]
"method":"collect_wlan_mac_inventoryNumber"
"params":[]
